{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Doha\\\\Desktop\\\\ITI\\\\Jobs\\\\Nagwa\\\\frontend\\\\src\\\\Components\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Choices from './Choices';\nimport Button from './Button';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = _ref => {\n  _s();\n\n  let {\n    questions\n  } = _ref;\n  // console.log(questions)\n  // console.log(question)\n  // console.log(increment)\n  // const [nextBtnClick, setNextBtnClick] = useState(false);\n  const [increment, setIncrement] = useState(0);\n  const [question, setQuestion] = useState(questions[increment]);\n  const [answers, setAnswers] = useState([]);\n  const [answer, setAnswer] = useState();\n  const Choices = [\"adverb\", \"verb\", \"noun\", \"adjective\"]; // let i = 0;\n  // get next question\n\n  const nextClicked = () => {\n    // console.log(increment, question.word)\n    setIncrement(increment + 1);\n\n    if (increment < questions.length) {\n      console.log(questions[increment]);\n      setQuestion(questions[increment]);\n      console.log(increment, question.word);\n    } else {\n      //get score\n      console.log(getScore());\n    }\n  }; //add his answer to answers array\n\n\n  const answerClicked = (q_id, choice) => {\n    console.log(q_id, choice);\n    console.log(checkAnswer(choice));\n    setAnswers(a => [...a, checkAnswer(choice)]);\n  }; //check his answer\n\n\n  const checkAnswer = choice => {\n    if (question.pos === choice) return true;else return false; //    () question.pos==choice ? true:false)\n  }; //get score \n\n\n  const getScore = () => {\n    console.log(\"hereee\", answers.length);\n    let score = 0;\n    answers.map(a => {\n      if (a) {\n        score += 10;\n      } else {//do nothing\n      }\n    });\n    return score;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"quiz_box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que_text\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: question.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option_list\",\n      children: Choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        onClick: () => answerClicked(question.id, choice),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: choice\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"next_btn\",\n        text: \"Next Question\",\n        fun: nextClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"UklVWSz3qL6fGxx85nMIh35WhKI=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Choices","Button","useState","Question","questions","increment","setIncrement","question","setQuestion","answers","setAnswers","answer","setAnswer","nextClicked","length","console","log","word","getScore","answerClicked","q_id","choice","checkAnswer","a","pos","score","map","index","id"],"sources":["C:/Users/Doha/Desktop/ITI/Jobs/Nagwa/frontend/src/Components/Question.js"],"sourcesContent":["import React from 'react'\r\nimport Choices from './Choices'\r\nimport Button from './Button'\r\nimport{useState} from 'react'\r\n\r\n\r\nconst Question = ({questions}) => {\r\n    // console.log(questions)\r\n    // console.log(question)\r\n    // console.log(increment)\r\n    // const [nextBtnClick, setNextBtnClick] = useState(false);\r\n    const [increment, setIncrement] = useState(0)\r\n    const [question, setQuestion] = useState(questions[increment])\r\n    const [answers, setAnswers] = useState([])\r\n    const [answer, setAnswer] = useState()\r\n    const Choices = [\"adverb\", \"verb\", \"noun\", \"adjective\"]\r\n    // let i = 0;\r\n    // get next question\r\n    const nextClicked=()=>{\r\n        // console.log(increment, question.word)\r\n        setIncrement(increment+1)\r\n        if(increment<questions.length){\r\n            console.log(questions[increment])\r\n            setQuestion(questions[increment])\r\n            console.log(increment, question.word)\r\n        }\r\n        else{//get score\r\n            console.log(getScore())\r\n        }\r\n    }\r\n    //add his answer to answers array\r\n    const answerClicked=(q_id, choice)=>{\r\n        console.log(q_id, choice)\r\n        console.log(checkAnswer(choice));\r\n        setAnswers(a=>[...a, checkAnswer(choice)])\r\n    }\r\n\r\n    //check his answer\r\n    const checkAnswer =(choice)=>{\r\n        if(question.pos===choice) return true;\r\n        else return false\r\n    //    () question.pos==choice ? true:false)\r\n    }\r\n    //get score \r\n    const getScore =()=>{\r\n        console.log(\"hereee\", answers.length)\r\n        let score = 0;\r\n        answers.map(a=>{\r\n            if(a){\r\n                score+=10\r\n            }\r\n            else{\r\n                //do nothing\r\n            }\r\n        })\r\n        return score;\r\n    }\r\n    return (\r\n    <section className='quiz_box'>\r\n    <div className='que_text'>\r\n        <span>{question.word}</span>\r\n    </div>\r\n    {/* choices */}\r\n    <div className='option_list'>\r\n        {Choices.map((choice, index)=>(\r\n            <div className='option' onClick={() => answerClicked(question.id, choice)}>\r\n            <span key={index} >{choice}</span>\r\n        </div>\r\n        ))}\r\n        {/* <div className='option' >\r\n            <span >adverb</span>\r\n        </div>\r\n        <div className='option'  >\r\n            <span >verb</span>\r\n        </div>\r\n        <div className='option'  >\r\n            <span >noun</span>\r\n        </div>\r\n        <div className='option'  >\r\n            <span>adjective</span>\r\n            onClick={answerClicked(\"adjective\")}\r\n        </div> */}\r\n    </div>        \r\n    <footer>\r\n            <Button className=\"next_btn\" text=\"Next Question\" fun={nextClicked} />\r\n        </footer>\r\n    </section>\r\n    )\r\n}\r\n\r\nexport default Question\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}