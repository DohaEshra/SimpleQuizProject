{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Doha\\\\Desktop\\\\ITI\\\\Jobs\\\\Nagwa\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css'; // import Header from \"./Components/Header\"; \n\nimport Button from './Components/Button';\nimport Questions from './Components/Questions';\nimport Rank from './Components/Rank';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [questions, setQuestions] = useState(\"\"); //     [ \n  //     {\n  //         id: 1,\n  //         word: \"slowly\",\n  //         pos: \"adverb\"\n  //     },\n  //     {\n  //         id: 2,\n  //         word: \"ride\",\n  //         pos: \"verb\"\n  //     },\n  //     {\n  //         id: 3,\n  //         word: \"bus\",\n  //         pos: \"noun\"\n  //     }\n  // ]\n\n  const get_Questions = async function getQuestions(e) {\n    // e.preventDefault()\n    try {\n      await axios.get(\"http://localhost:8000/practice\").then(data => {\n        console.log(data);\n        setQuestions(data.exam);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //start test\n\n\n  const [isShown, setIsShown] = useState(false);\n\n  const startTest = () => {\n    setIsShown(true);\n    get_Questions();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start_btn\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Practice Test\",\n        fun: startTest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isShown && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Questions, {\n        questions: questions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lIr90j28eJ2KBni48Gu8eFBo9ro=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","Questions","Rank","useState","axios","App","questions","setQuestions","get_Questions","getQuestions","e","get","then","data","console","log","exam","error","isShown","setIsShown","startTest"],"sources":["C:/Users/Doha/Desktop/ITI/Jobs/Nagwa/frontend/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\n// import Header from \"./Components/Header\"; \nimport Button from './Components/Button';\nimport Questions from './Components/Questions';\nimport Rank from './Components/Rank'\n\nimport{useState} from 'react'\nimport axios from 'axios';\n\nfunction App() {\n  const [questions, setQuestions] = useState(\"\")\n//     [ \n//     {\n//         id: 1,\n//         word: \"slowly\",\n//         pos: \"adverb\"\n//     },\n//     {\n//         id: 2,\n//         word: \"ride\",\n//         pos: \"verb\"\n//     },\n//     {\n//         id: 3,\n//         word: \"bus\",\n//         pos: \"noun\"\n//     }\n// ]\nconst get_Questions =async function getQuestions(e){\n  // e.preventDefault()\n\n  try {\n    await axios.get(\"http://localhost:8000/practice\")\n    .then((data)=>{\n      console.log(data)\n      setQuestions(data.exam)})\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n//start test\nconst [isShown, setIsShown] = useState(false);\n\n\nconst startTest = ()=>{\n    setIsShown(true);\n    get_Questions()\n  }\n\n  return (\n    <div className=\"container \">\n      <div className='start_btn'>\n    <Button text ='Practice Test' fun={startTest}/>\n      </div>\n      {/* if exam started show questions */}\n      {isShown&&(\n        <div>\n          <Questions questions = {questions}/>\n        </div>\n          )}\n    <div>\n      <Rank/>\n    </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,sCAAP,C,CACA;;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAAOC,QAAP,QAAsB,OAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C,CADa,CAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,MAAMK,aAAa,GAAE,eAAeC,YAAf,CAA4BC,CAA5B,EAA8B;IACjD;IAEA,IAAI;MACF,MAAMN,KAAK,CAACO,GAAN,CAAU,gCAAV,EACLC,IADK,CACCC,IAAD,IAAQ;QACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ;QACAN,YAAY,CAACM,IAAI,CAACG,IAAN,CAAZ;MAAwB,CAHpB,CAAN;IAID,CALD,CAKE,OAAOC,KAAP,EAAc;MACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ;IACD;EACF,CAXD,CAnBe,CAiCf;;;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;;EAGA,MAAMiB,SAAS,GAAG,MAAI;IAClBD,UAAU,CAAC,IAAD,CAAV;IACAX,aAAa;EACd,CAHH;;EAKE,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,wBACE;MAAK,SAAS,EAAC,WAAf;MAAA,uBACF,QAAC,MAAD;QAAQ,IAAI,EAAE,eAAd;QAA8B,GAAG,EAAEY;MAAnC;QAAA;QAAA;QAAA;MAAA;IADE;MAAA;MAAA;MAAA;IAAA,QADF,EAKGF,OAAO,iBACN;MAAA,uBACE,QAAC,SAAD;QAAW,SAAS,EAAIZ;MAAxB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QANJ,eAUA;MAAA,uBACE,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAVA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GA3DQD,G;;KAAAA,G;AA6DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}