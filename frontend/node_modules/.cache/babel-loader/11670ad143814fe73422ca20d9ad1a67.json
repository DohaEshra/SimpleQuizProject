{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Doha\\\\Desktop\\\\ITI\\\\Jobs\\\\Nagwa\\\\frontend\\\\src\\\\Components\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Choices from './Choices';\nimport Button from './Button';\nimport Rank from './Rank';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = _ref => {\n  _s();\n\n  let {\n    questions\n  } = _ref;\n  // console.log(questions)\n  // console.log(question)\n  // console.log(increment)\n  // const [nextBtnClick, setNextBtnClick] = useState(false);\n  const [increment, setIncrement] = useState(0);\n  const [question, setQuestion] = useState(questions[increment]);\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [isShown, setIsShown] = useState(false);\n  const [rank, setRank] = useState(0);\n  const [ranks, setRanks] = useState([]);\n  const Choices = [\"adverb\", \"verb\", \"noun\", \"adjective\"]; // let i = 0;\n  // get next question\n\n  const nextClicked = () => {\n    // console.log(increment, question.word)\n    setIncrement(increment + 1);\n\n    if (increment < questions.length) {\n      console.log(questions[increment]);\n      setQuestion(questions[increment]);\n      console.log(increment, question.word);\n    } else {\n      //get score\n      setIsShown(true);\n      console.log(getScore()); // setScore(getScore())\n      // postScore()\n\n      console.log(\"score\", score);\n    }\n  }; //add his answer to answers array\n\n\n  const answerClicked = (q_id, choice) => {\n    // console.log(q_id, choice)\n    console.log(checkAnswer(choice));\n    setAnswers(a => [...a, checkAnswer(choice)]);\n  }; //check his answer\n\n\n  const checkAnswer = choice => {\n    if (question.pos === choice) return true;else return false; //    () question.pos==choice ? true:false)\n  }; //get score \n\n\n  const getScore = () => {\n    // console.log(\"hereee\", answers.length)\n    let scor = 0;\n    answers.map(a => {\n      if (a) {\n        scor += 10;\n      } else {//do nothing\n      }\n    });\n    setScore(score + scor);\n    console.log(scor, score); // postScore()\n\n    return score;\n  };\n\n  const postScore = () => {\n    axios.post(\"http://localhost:8000/rank\", {\n      score: score\n    }).then(data => {\n      console.log(\"rank\", data.data.rank);\n      setRank(data.data.rank);\n      setRanks(data.data.Ranks);\n    }).catch(error => console.log(error));\n  }; // if(answers.length<10){\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isShown && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quiz_box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"que_text\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: question.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option_list\",\n        children: Choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          onClick: () => answerClicked(question.id, choice),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: choice\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"next_btn\",\n          text: \"Next Question\",\n          fun: nextClicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), isShown && /*#__PURE__*/_jsxDEV(Rank, {\n      scor: score,\n      rank: rank,\n      ranksArray: ranks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this); // return(\n  //     )\n};\n\n_s(Question, \"Hpb3fB7bv5Hz73u1zRPfWs1d3QA=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Choices","Button","Rank","useState","useEffect","axios","Question","questions","increment","setIncrement","question","setQuestion","answers","setAnswers","score","setScore","isShown","setIsShown","rank","setRank","ranks","setRanks","nextClicked","length","console","log","word","getScore","answerClicked","q_id","choice","checkAnswer","a","pos","scor","map","postScore","post","then","data","Ranks","catch","error","index","id"],"sources":["C:/Users/Doha/Desktop/ITI/Jobs/Nagwa/frontend/src/Components/Question.js"],"sourcesContent":["import React from 'react'\r\nimport Choices from './Choices'\r\nimport Button from './Button'\r\nimport Rank from './Rank'\r\nimport{useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Question = ({questions}) => {\r\n    // console.log(questions)\r\n    // console.log(question)\r\n    // console.log(increment)\r\n    // const [nextBtnClick, setNextBtnClick] = useState(false);\r\n    const [increment, setIncrement] = useState(0)\r\n    const [question, setQuestion] = useState(questions[increment])\r\n    const [answers, setAnswers] = useState([])\r\n    const [score, setScore] = useState(0)\r\n    const [isShown, setIsShown] = useState(false);\r\n    const [rank, setRank] = useState(0);\r\n    const [ranks, setRanks] = useState([]);\r\n\r\n    const Choices = [\"adverb\", \"verb\", \"noun\", \"adjective\"]\r\n    // let i = 0;\r\n    // get next question\r\n    const nextClicked=()=>{\r\n        // console.log(increment, question.word)\r\n        setIncrement(increment+1)\r\n        if(increment<questions.length){\r\n            console.log(questions[increment])\r\n            setQuestion(questions[increment])\r\n            console.log(increment, question.word)\r\n        }\r\n        else{//get score\r\n            setIsShown(true)\r\n            console.log(getScore())\r\n            // setScore(getScore())\r\n            // postScore()\r\n            console.log(\"score\",score)\r\n        }\r\n    }\r\n    //add his answer to answers array\r\n    const answerClicked=(q_id, choice)=>{\r\n        // console.log(q_id, choice)\r\n        console.log(checkAnswer(choice));\r\n        setAnswers(a=>[...a, checkAnswer(choice)])\r\n    }\r\n\r\n    //check his answer\r\n    const checkAnswer =(choice)=>{\r\n        if(question.pos===choice) return true;\r\n        else return false\r\n    //    () question.pos==choice ? true:false)\r\n    }\r\n    //get score \r\n    const getScore =()=>{\r\n        // console.log(\"hereee\", answers.length)\r\n        let scor = 0;\r\n        answers.map(a=>{\r\n            if(a){\r\n                scor+=10\r\n            }\r\n            else{\r\n                //do nothing\r\n            }\r\n        })\r\n        setScore(score+scor);\r\n        console.log(scor, score)\r\n        // postScore()\r\n\r\n        return score;\r\n    }\r\n    const postScore = ()=>{\r\n        axios.post(\"http://localhost:8000/rank\",{score:score})\r\n        .then(data=>{\r\n          console.log(\"rank\",data.data.rank)\r\n          setRank(data.data.rank)\r\n          setRanks(data.data.Ranks)\r\n        }).catch(error=>console.log(error))\r\n      }\r\n    // if(answers.length<10){\r\n\r\n        return (\r\n\r\n    <div>\r\n        {!isShown&&(\r\n    <section className='quiz_box'>\r\n    <div className='que_text'>\r\n        <span>{question.word}</span>\r\n    </div>\r\n    {/* choices */}\r\n    <div className='option_list'>\r\n        {Choices.map((choice, index)=>(\r\n            <div className='option' onClick={() => answerClicked(question.id, choice)}>\r\n            <span key={index} >{choice}</span>\r\n        </div>\r\n        ))}\r\n        {/* <div className='option' >\r\n            <span >adverb</span>\r\n            </div>\r\n            <div className='option'  >\r\n            <span >verb</span>\r\n            </div>\r\n            <div className='option'  >\r\n            <span >noun</span>\r\n            </div>\r\n            <div className='option'  >\r\n            <span>adjective</span>\r\n            onClick={answerClicked(\"adjective\")}\r\n        </div> */}\r\n    </div>        \r\n    <footer>\r\n            <Button className=\"next_btn\" text=\"Next Question\" fun={nextClicked} />\r\n        </footer>\r\n    </section>\r\n        )}\r\n    {isShown&&(\r\n        <Rank scor={score} rank={rank} ranksArray={ranks}/>\r\n        )}\r\n        </div>\r\n    )\r\n\r\n    // return(\r\n\r\n    //     )\r\n        \r\n}\r\nexport default Question\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}