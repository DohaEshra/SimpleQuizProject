{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Doha\\\\Desktop\\\\ITI\\\\Jobs\\\\Nagwa\\\\SimpleQuizProject\\\\frontend\\\\src\\\\Components\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Rank from './Rank';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = _ref => {\n  _s();\n\n  let {\n    questions\n  } = _ref;\n  const [increment, setIncrement] = useState(0);\n  const [question, setQuestion] = useState(questions[increment]);\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [isShown, setIsShown] = useState(false);\n  const [rank, setRank] = useState(0);\n  const [ranks, setRanks] = useState([]);\n  const Choices = [\"adverb\", \"verb\", \"noun\", \"adjective\"]; // get next question\n\n  const nextClicked = () => {\n    // console.log(increment, question.word)\n    setIncrement(incremen => incremen + 1);\n    console.log(increment);\n\n    if (increment < questions.length) {\n      console.log(questions[increment]);\n      setQuestion(questions[increment]); // console.log(increment, question.word)\n    } else {\n      //get score\n      getScore(); // console.log(getScore())\n\n      console.log(\"score\", score);\n      setIsShown(true); // getScore()\n      // postScore()\n    }\n  }; //add his answer to answers array\n\n\n  const answerClicked = (q_id, choice) => {\n    // console.log(q_id, choice)\n    console.log(checkAnswer(choice));\n    setAnswers(a => [...a, checkAnswer(choice)]);\n  }; //check his answer\n\n\n  const checkAnswer = choice => {\n    if (question.pos === choice) return true;else return false; //    () question.pos==choice ? true:false)\n  }; //get score \n\n\n  const getScore = () => {\n    let scor = 0;\n    answers.map(a => {\n      if (a) {\n        scor += 10;\n        setScore(oldScore => oldScore + 10);\n      } else {//do nothing\n      }\n    });\n    postScore(scor);\n    console.log(score); // postScore()\n    // return score;\n  };\n\n  const postScore = s => {\n    console.log(s);\n    axios.post(\"http://localhost:8000/rank\", {\n      score: s\n    }).then(data => {\n      console.log(\"rank\", data.data.rank);\n      setRank(data.data.rank);\n      setRanks(data.data.Ranks);\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isShown && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quiz_box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"que_text\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: question.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option_list\",\n        children: Choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          onClick: () => answerClicked(question.id, choice),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: choice\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next_btn\",\n          onClick: () => {\n            nextClicked();\n          },\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), isShown && /*#__PURE__*/_jsxDEV(Rank, {\n      scor: score,\n      rank: rank,\n      ranksArray: ranks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"Hpb3fB7bv5Hz73u1zRPfWs1d3QA=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Rank","useState","useEffect","axios","Question","questions","increment","setIncrement","question","setQuestion","answers","setAnswers","score","setScore","isShown","setIsShown","rank","setRank","ranks","setRanks","Choices","nextClicked","incremen","console","log","length","getScore","answerClicked","q_id","choice","checkAnswer","a","pos","scor","map","oldScore","postScore","s","post","then","data","Ranks","catch","error","word","index","id"],"sources":["C:/Users/Doha/Desktop/ITI/Jobs/Nagwa/SimpleQuizProject/frontend/src/Components/Question.js"],"sourcesContent":["import React from 'react'\r\nimport Rank from './Rank'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Question = ({ questions }) => {\r\n    const [increment, setIncrement] = useState(0)\r\n    const [question, setQuestion] = useState(questions[increment])\r\n    const [answers, setAnswers] = useState([])\r\n    const [score, setScore] = useState(0)\r\n    const [isShown, setIsShown] = useState(false);\r\n    const [rank, setRank] = useState(0);\r\n    const [ranks, setRanks] = useState([]);\r\n\r\n\r\n    const Choices = [\"adverb\", \"verb\", \"noun\", \"adjective\"]\r\n\r\n    // get next question\r\n    const nextClicked = () => {\r\n        // console.log(increment, question.word)\r\n        setIncrement(incremen => incremen + 1)\r\n        console.log(increment)\r\n        if (increment < questions.length) {\r\n            console.log(questions[increment])\r\n            setQuestion(questions[increment])\r\n            // console.log(increment, question.word)\r\n        }\r\n        else {//get score\r\n        \r\n            getScore();\r\n            // console.log(getScore())\r\n            console.log(\"score\", score)\r\n            setIsShown(true)\r\n            // getScore()\r\n            // postScore()\r\n        }\r\n    }\r\n    //add his answer to answers array\r\n    const answerClicked = (q_id, choice) => {\r\n        // console.log(q_id, choice)\r\n        console.log(checkAnswer(choice));\r\n        setAnswers(a => [...a, checkAnswer(choice)])\r\n    }\r\n\r\n    //check his answer\r\n    const checkAnswer = (choice) => {\r\n        if (question.pos === choice) return true;\r\n        else return false\r\n        //    () question.pos==choice ? true:false)\r\n    }\r\n    //get score \r\n    const getScore = () => {\r\n\r\n        let scor = 0;\r\n        answers.map(a => {\r\n            if (a) {\r\n                scor += 10\r\n                setScore(oldScore => oldScore + 10);\r\n            }\r\n            else {\r\n                //do nothing\r\n            }\r\n        })\r\n        postScore(scor);\r\n        console.log(score)\r\n        // postScore()\r\n        // return score;\r\n    }\r\n    const postScore = (s) => {\r\n        console.log(s)\r\n        axios.post(\"http://localhost:8000/rank\", { score: s })\r\n            .then(data => {\r\n                console.log(\"rank\", data.data.rank)\r\n                setRank(data.data.rank)\r\n                setRanks(data.data.Ranks)\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {!isShown && (\r\n                <section className='quiz_box'>\r\n                    <div className='que_text'>\r\n                        <span>{question.word}</span>\r\n                    </div>\r\n                    {/* choices */}\r\n                    <div className='option_list'>\r\n                        {Choices.map((choice, index) => (\r\n                            <div className='option' onClick={() => answerClicked(question.id, choice)}>\r\n                                <span key={index} >{choice}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <footer>\r\n                        <button className=\"next_btn\" onClick={() => { nextClicked() }}>Next Question</button>\r\n                    </footer>\r\n                </section>\r\n            )}\r\n            {isShown && (\r\n                <Rank scor={score} rank={rank} ranksArray={ranks} />\r\n            )}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default Question\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}